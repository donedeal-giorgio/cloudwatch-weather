AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aws-weather: uses cloudwatch to monitor the weather using met.ie data

Parameters:
  LocationName:
    Type: String
    Description: The default location to capture weather information
    Default: 'DublinSouth'
Globals:
  Function:
    Timeout: 10
    Runtime: python3.7
    Environment:
      Variables:
        LOCATION: !Ref LocationName
Resources:
  MetData:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: MeteirannData
      CodeUri: get_met_data/
      Handler: app.lambda_handler
      Runtime: python3.7
      Events:
        ScrapeEvent:
          Type: Schedule
          Properties:
            Name: ScrapeEvent
            Description: AWS Weather Dashboard
            Enabled: true
            Schedule: cron(*/30 * * * ? *)
  WeatherStationDashboard:
    Type: 'AWS::CloudWatch::Dashboard'
    Properties:
      DashboardName: DublinWeather
      DashboardBody: !Sub >
        {
            "widgets": [
                {
                    "type": "metric",
                    "x": 0,
                    "y": 3,
                    "width": 24,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                            [ "WeatherStation", "Temperature", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper" ]
                        ],
                        "region": "eu-west-1",
                        "yAxis": {
                            "left": {
                                "min": -20,
                                "max": 35,
                                "label": "Degrees Celsius",
                                "showUnits": false
                            }
                        },
                        "period": 300,
                        "title": "Temperature"
                    }
                },
                {
                    "type": "metric",
                    "x": 18,
                    "y": 0,
                    "width": 6,
                    "height": 3,
                    "properties": {
                        "metrics": [
                            [ "WeatherStation", "Temperature", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper", { "label": "Degrees Celsius" } ]
                        ],
                        "view": "singleValue",
                        "region": "eu-west-1",
                        "title": "Current Temperature",
                        "stat": "Average",
                        "period": 300
                    }
                },
                {
                    "type": "text",
                    "x": 0,
                    "y": 0,
                    "width": 18,
                    "height": 3,
                    "properties": {
                        "markdown": "\n# South Dublin Weather\n"
                    }
                },
                {
                    "type": "metric",
                    "x": 0,
                    "y": 9,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                            [ "WeatherStation", "Pressure", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper" ]
                        ],
                        "region": "eu-west-1",
                        "title": "Pressure",
                        "yAxis": {
                            "left": {
                                "label": "kPa",
                                "showUnits": false
                            }
                        }
                    }
                },
                {
                    "type": "metric",
                    "x": 12,
                    "y": 9,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                            [ "WeatherStation", "Rainfall", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper" ]
                        ],
                        "region": "eu-west-1",
                        "title": "Rainfall",
                        "yAxis": {
                            "left": {
                                "label": "Millimiters",
                                "showUnits": false
                            }
                        }
                    }
                },
                {
                    "type": "metric",
                    "x": 0,
                    "y": 15,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                            [ "WeatherStation", "Humidity", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper" ]
                        ],
                        "region": "eu-west-1",
                        "period": 300,
                        "title": "Humidity",
                        "yAxis": {
                            "left": {
                                "label": "Grams per cubic meter",
                                "showUnits": false
                            }
                        }
                    }
                },
                {
                    "type": "metric",
                    "x": 12,
                    "y": 15,
                    "width": 12,
                    "height": 6,
                    "properties": {
                        "view": "timeSeries",
                        "stacked": false,
                        "metrics": [
                            [ "WeatherStation", "WindSpeed", "ServiceName", "AwsWeather", "LogGroup", "MeteirannData", "ServiceType", "LambdaScraper" ]
                        ],
                        "region": "eu-west-1",
                        "title": "Wind Speed",
                        "yAxis": {
                            "left": {
                                "label": "Km/hour",
                                "showUnits": true
                            }
                        }
                    }
                }
            ]
        }
  #Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  HelloWorldApi:
#    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#  HelloWorldFunction:
#    Description: "Hello World Lambda Function ARN"
#    Value: !GetAtt HelloWorldFunction.Arn
#  HelloWorldFunctionIamRole:
#    Description: "Implicit IAM Role created for Hello World function"
#    Value: !GetAtt HelloWorldFunctionRole.Arn
